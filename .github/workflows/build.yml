name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  repository_dispatch:
    types: [build]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_EVENT_NAME: ${{ github.event_name }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/checkout@v4
        with:
          repository: laminlabs/lndocs
          ssh-key: ${{ secrets.READ_LNDOCS }}
          path: lndocs
          ref: main

      - uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: "1.3.1-0"
          environment-name: snakemake
          condarc: |
            channels:
              - conda-forge
              - bioconda
          create-args: >-
            python=${{ matrix.python-version }}
            snakemake
            mamba
          init-shell: >-
            bash
          cache-environment: true
          post-cleanup: none

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
      - run: pip install -U laminci snakemake ftputil
      - name: Download and install Conda
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          yes | conda install -n base -c conda-forge mamba
      - run: sudo apt-get -y install graphviz
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - run: nox -s lint
      - run: nox -s build
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - uses: voxmedia/github-action-slack-notify-build@v1
        if: ${{ failure() && github.event_name == 'repository_dispatch' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_GITHUB_ACTION }}
        with:
          channel_id: C05FDBBFJ1F
          status: FAILURE
          color: danger

      - uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "_build/html"
          production-deploy: ${{ github.event_name == 'push' }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-commit-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}